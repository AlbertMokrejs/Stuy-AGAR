NETWORKING STRUCTURE:

Server:
	Requires Orb and Vpoint classes. It keeps track of orbs and their IDs and moves them once per "round". It does not move orbs with an ID over 100,000 which are designated as playerorbs. Playersorbs are also not moved. It then sends out a "ledger" containing each orb's ID, size and position to every client. The clients then spawn all the orbs, move theirs (found using the IDs in the ledger) and send back a line containing their size and position. This is overwritten in the main ledger for use for the next turn. Orbs killing other orbs occurs on the server side. The server hands out IDs to new orbs, and gives IDs to player orbs when a new client thread is created. When there are no threads, nothing happens.
	
Client:
	Requires Orb, PlayerOrb and Vpoint classes. Keeps track only of its own orb, and its ID. When it gets the ledger from the server, it generate those orbs and its own and moves its own orb (found using the ID). It then reports back where it is in a line for the server to process. Client also keeps track of its own score and deals with centering and graphics.


======

Class Game{
       -initializes game world, arraylist of orbs and a player orb.
       -Has a Turn() method which runs turns per each orbs: processing prints at this time.
       -Checks if player is alive: ends game if dead.
       -Displays score.
}								
        

Class Orb{
      -is an orb: keeps track of its Size, xCord, yCord.
      -if its too close to another orb (which is bigger) it'll delete itself and increase the other orbs size.
      -otherwise it would use vector addition and mildRNG to determine an optimal direction to travel.
      -Travel speed is inversely proportional to size.
      -can have its size increased by other orbs as they die.		        
}
			  
			  
Class PlayerOrb extends Orb{
  -is an orb, keeps track of its Size, xCord, yCord.
  -takes player inputs to move in real time. 
  -Speed based on inverse of size.
  -if it gets too close to another orb it dies. Death ends the game, as monitored by Game.
  -can have its size increased by other orbs as they die.
  -can shoot out mass of itself that would decrese its size (shoot out small orb)
  -can split in half to shoot half of itself out (the other half can absorb more mass)
  -if runs into a virus if too large, it will split apart into tiny pieces
}

Class Virus extends Orb{
  -if any orb is too large and it runs into a virus, it will split into tiny pieces
  -if its too small it can just walk through unharmed.
}
					      
					      
Class VPoint{
      -a vector class cause java vectors are ew
}


